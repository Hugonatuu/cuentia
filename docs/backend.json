{
  "entities": {
    "UserProfile": {
      "title": "User Profile",
      "description": "Represents a user's profile information stored in Firestore.",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "displayName": {
          "type": "string"
        },
        "photoURL": {
          "type": "string",
          "format": "uri"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of when the user account was created."
        }
      },
      "required": ["email", "createdAt"]
    },
    "Story": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Story",
      "type": "object",
      "description": "Represents a story created by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the story."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Story)"
        },
        "title": {
          "type": "string",
          "description": "Title of the story."
        },
        "learningObjective": {
          "type": "string",
          "description": "The learning objective of the story."
        },
        "readerAge": {
          "type": "number",
          "description": "Target age of the reader."
        },
        "characterIds": {
          "type": "array",
          "description": "References to Characters. (Relationship: Story N:N Character)",
          "items": {
            "type": "string"
          }
        },
        "prompt": {
          "type": "string",
          "description": "Prompt used to generate the story."
        },
        "readerName": {
          "type": "string",
          "description": "Name of the reader (optional)."
        },
        "initialPhrase": {
          "type": "string",
          "description": "Initial phrase of the story (optional)."
        },
        "finalPhrase": {
          "type": "string",
          "description": "Final phrase of the story (optional)."
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "learningObjective",
        "readerAge",
        "prompt"
      ]
    },
    "Character": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Character",
      "type": "object",
      "description": "Represents a character in a story.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the character."
        },
        "name": {
          "type": "string",
          "description": "Name of the character."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL of the character's avatar image.",
          "format": "uri"
        },
        "storyIds": {
          "type": "array",
          "description": "References to Stories. (Relationship: Story N:N Character)",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "avatarUrl",
        "createdAt"
      ]
    },
    "Subscription": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subscription",
      "type": "object",
      "description": "Represents a user's subscription plan.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the subscription."
        },
        "planName": {
          "type": "string",
          "description": "Name of the subscription plan (e.g., Artista, Magico)."
        },
        "creditLimit": {
          "type": "number",
          "description": "Number of credits included in the subscription plan."
        },
        "price": {
          "type": "number",
          "description": "Price of the subscription plan."
        }
      },
      "required": [
        "id",
        "planName",
        "creditLimit",
        "price"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/entities/UserProfile"
          },
          "description": "Stores public-facing user profiles. Uses path-based ownership for write operations, but may be publicly readable.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, matching the Firebase Auth UID."
            }
          ],
          "subcollections": {
            "path": "/characters/{characterId}",
            "definition": {
              "entityName": "Character",
              "schema": {
                "$ref": "#/entities/Character"
              },
              "description": "Stores characters created by the user.",
              "params": [
                {
                  "name": "characterId",
                  "description": "The unique identifier of the character."
                }
              ]
            }
          }
        }
      },
       {
        "path": "/users/{userId}/stories/{storyId}",
        "definition": {
          "entityName": "Story",
          "schema": {
            "$ref": "#/entities/Story"
          },
          "description": "Stores stories created by each user. Uses path-based ownership for private user data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "storyId",
              "description": "The unique identifier of the story."
            }
          ]
        }
      },
      {
        "path": "/subscriptions/{subscriptionId}",
        "definition": {
          "entityName": "Subscription",
          "schema": {
            "$ref": "#/entities/Subscription"
          },
          "description": "Stores subscription plans. Not user-specific, so stored at the root level.",
          "params": [
            {
              "name": "subscriptionId",
              "description": "The unique identifier of the subscription plan."
            }
          ]
        }
      }
    ]
  }
}
